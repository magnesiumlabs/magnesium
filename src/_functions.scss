// ============================================================================================= //
//                                           FUNCTIONS                                           //
// ============================================================================================= //

@use "sass:map";
@use "@unsass/css/custom-properties";
@use "@unsass/types" as type;
@use "@unsass/string";
@use "./variables";

// ------------------------------------------------------------------------- //
// Private functions
// ------------------------------------------------------------------------- //

// ...

// ------------------------------------------------------------------------- //
// Public functions
// ------------------------------------------------------------------------- //

///
/// @example - scss
///   $name: magnesium.create-name("button"); -> "mg-button"
///
@function create-name($name) {
    @if variables.$prefix {
        $name: #{variables.$prefix}-#{$name};
    }

    @return $name;
}

///
/// @example - scss
///   $light-theme: (
///     label-color: darkcyan
///   );
///
///   $theme: theme.create-theme-vars($light-theme, "button");
///
///   .foo {
///     color: map.get($theme, label-color);
///   }
///
/// @example - css
///   .foo {
///     color: var(--md-button-label-color, darkcyan);
///   }
///
/// @param {Map} $theme - The theme tokens map. Mandatory.
/// @param {String} $prefix - Component name to prepend for each token's custom property name. Default: `null`.
///
@function create-theme-vars($theme, $prefix: null) {
    $result: ();

    @each $key, $value in $theme {
        $token: create-name(string.combine($prefix, $key));

        @if type.is-map($theme) {
            $value: custom-properties.create-var(custom-properties.create($token, $value));
        } @else if type.is-list($theme) or type.is-string($theme) {
            $value: custom-properties.create-var(custom-properties.create($token));
        }

        $result: map.set($result, $key, $value);
    }

    @return $result;
}
