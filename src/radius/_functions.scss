// ============================================================================================= //
//                                           FUNCTIONS                                           //
// ============================================================================================= //

@use "sass:map";
@use "@unsass/css/custom-properties";
@use "../variables";
@use "../functions";

// ------------------------------------------------------------------------- //
// Private functions
// ------------------------------------------------------------------------- //

///
/// Check if radius token exist.
///
@function _exist($token) {
    @if not map.has-key(variables.$radius, $token) {
        @error "Invalid radius scheme, '#{$token}' doesn't exist. Choose one of #{map.keys(variables.$radius)}.";
    }

    @return map.has-key(variables.$radius, $token);
}

// ------------------------------------------------------------------------- //
// Public functions
// ------------------------------------------------------------------------- //

///
/// @example - scss
///   $radius: get-tokens(); -> `("small", "medium")`
///
@function get-tokens() {
    @return map.keys(variables.$radius);
}

///
/// @example - scss
///   $radius: get-value("small"); -> `6px`
///
@function get-value($token) {
    @if _exist($token) {
        @return map.get(variables.$radius, $token);
    }
}

///
/// @example - scss
///   $radius: get-variable("small"); -> `var(--mg-radius-small, 6px)`
///
/// @example - scss
///   $radius: get-variable("small", "shape-radius"); -> `var(--mg-shape-radius-small, 6px)`
///
@function get-variable($token, $prefix: radius) {
    $name: functions.create-name(#{$prefix}-#{$token});
    $value: get-value($token);

    @return custom-properties.create-var(custom-properties.create($name, $value));
}
