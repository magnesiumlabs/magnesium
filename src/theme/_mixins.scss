// ============================================================================================= //
//                                            MIXINS                                             //
// ============================================================================================= //

@use "sass:map";
@use "@unsass/selector";
@use "@unsass/string";
@use "../variables" as core-variables;
@use "../functions" as core-functions;
@use "./functions";

@mixin core-styles {
    $theme: functions.create-theme-vars(core-variables.$colors, theme);

    // --------------------------------- //
    // Main classes
    // --------------------------------- //

    @each $key, $value in $theme {
        $selector: core-functions.create-name(theme--#{$key});

        @include selector.create(#{$selector}) {
            color: map.get($theme, $key);
        }
    }

    // --------------------------------- //
    // Background classes
    // --------------------------------- //

    @each $key, $value in $theme {
        $selector: core-functions.create-name(theme--#{$key}-bg);

        @include selector.create(#{$selector}) {
            background-color: map.get($theme, $key);
        }
    }
}

// ------------------------------------------------------------------------- //
// Private mixins
// ------------------------------------------------------------------------- //

// ...

// ------------------------------------------------------------------------- //
// Public mixins
// ------------------------------------------------------------------------- //

///
/// @example - scss
///   $theme: (
///     "label-color": darkcyan
///   );
///
///   $theme: create-theme-vars($theme, "button"); -> `(label-color: var(--mg-button-label-color, darkcyan))`
///
///   .foo {
///     @include create-theme($theme);
///   }
///
/// @example - css
///   .foo {
///     --mg-button-label-color: darkcyan;
///   }
///
/// @param {Map} $theme - The theme tokens map.
///
@mixin create-theme($theme) {
    @each $key, $value in $theme {
        $var: string.trim($value, "var(", ")");
        $comma: string.index($var, ",");

        @if $comma {
            #{string.slice($var, 1, $comma - 1)}: string.slice($var, $comma + 1);
        } @else {
            #{$var}: $value;
        }
    }
}
