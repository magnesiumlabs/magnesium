// ============================================================================================= //
//                                            MIXINS                                             //
// ============================================================================================= //

@use "sass:list";
@use "sass:map";
@use "../variables" as core-variables;
@use "../functions" as core-functions;
@use "./variables";
@use "./functions";

// ------------------------------------------------------------------------- //
// Private mixins
// ------------------------------------------------------------------------- //

@mixin _typography($style) {
    @each $key, $value in variables.$allowed-tokens {
        #{$key}: map.get($style, $key);
    }
}

// ------------------------------------------------------------------------- //
// Public mixins
// ------------------------------------------------------------------------- //

///
/// @example - scss
///   .foo {
///     @include theme-styles("button", "button-label");
///   }
///
/// @example - css
///   .foo {
///     font-size: var(--mg-button-label-font-size, var(--mg-typography-button-font-size, 20px));
///     font-weight: var(--mg-button-label-font-weight, var(--mg-typography-button-font-weight, 700));
///     letter-spacing: var(--mg-button-label-letter-spacing, var(--mg-typography-button-letter-spacing, 2px));
///     line-height: var(--mg-button-label-line-height, var(--mg-typography-button-line-height, 22px));
///   }
///
/// @param {Map} $style - The typography style.
/// @param {String} $prefix - The typography component prefix.
///
@mixin theme-styles($style, $prefix) {
    @include _typography(functions.create-typography-var($style, $prefix));
}

///
/// @example - scss
///   $typography: (
///     font-size: 16px
///   );
///
///   .foo {
///     @include create-theme($typography, "button");
///   }
///
/// @example - css
///   .foo {
///     --mg-typography-button-font-size: 16px;
///   }
///
/// @param {Map} $typography - The typography tokens map.
/// @param {String} $style - The typography style prefix.
///
@mixin create-typography($typography, $style) {
    @each $key, $value in $typography {
        @if list.index(variables.$allowed-tokens, $key) != null {
            --#{core-functions.create-name(typography-#{$style}-#{$key})}: #{$value};
        }
    }
}
