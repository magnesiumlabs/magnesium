// ============================================================================================= //
//                                           FUNCTIONS                                           //
// ============================================================================================= //

@use "sass:map";
@use "@unsass/css/custom-properties";
@use "../core";

$_custom-property-prefix: map.get(core.$colors, "prefix");
$_tokens: map.get(core.$colors, "tokens");

// ------------------------------------------------------------------------- //
// Private functions
// ------------------------------------------------------------------------- //

///
/// Check if color token exist.
///
@function _exist($token) {
    @if not map.has-key($_tokens, $token) {
        @error "Invalid color token, '#{$token}' doesn't exist. Choose one of '#{map.keys($_tokens)}'.";
    }

    @return $token;
}

// ------------------------------------------------------------------------- //
// Public functions
// ------------------------------------------------------------------------- //

///
/// @example - scss
///   $color: color.tokens(); -> `("primary", "secondary")`
///
@function tokens($value: false) {
    @if $value {
        @return $_tokens;
    } @else{
        @return map.keys($_tokens);
    }
}

///
/// @example - scss
///   $color: color.name("primary"); -> `mg-color-primary`
///
@function name($token) {
    @if _exist($token) {
        @return core.create-name($_custom-property-prefix, $token);
    }
}

///
/// @example - scss
///   $color: color.value("primary"); -> `darkcyan`
///
@function value($token) {
    @if _exist($token) {
        @return map.get($_tokens, $token);
    }
}

///
/// @example - scss
///   .foo {
///     color: color.emit-variable("primary");
///   }
///
/// @example - css
///   .foo {
///     color: var(--mg-color-primary);
///   }
///
/// @return {String} The token value.
/// @return {Boolean} The fallback value.
///
@function emit-variable($token, $fallback: false) {
    @return core.emit-variable($_tokens, _exist($token), $fallback, $_custom-property-prefix);
}
