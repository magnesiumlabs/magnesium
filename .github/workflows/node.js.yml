name: Node.js CI

on:
  push:
    branches: [ main, develop, beta, ci ]
  pull_request:
    branches: [ main, develop, beta ]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [ '20.x' ]

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci --ignore-scripts --no-audit

      - name: Test
        run: npm run test

      - name: Test Reporter
        uses: dorny/test-reporter@v1.8.0
        with:
          name: JEST Tests
          path: junit.xml
          reporter: jest-junit

  publish:
    runs-on: ubuntu-latest
    needs: test
    if: ${{ github.ref == 'refs/heads/main' }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: git config
        run: |
          git config user.name "Release It"
          git config user.email "release-it@users.noreply.github.com"

      - name: Generate .npmrc
        run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > .npmrc

      - name: Install Dependencies
        run: npm ci --ignore-scripts --no-audit

      - name: Release
        run: npm run release
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish_beta:
    runs-on: ubuntu-latest
    needs: test
    if: ${{ github.ref == 'refs/heads/ci' }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: git config
        run: |
          git config user.name "Release It"
          git config user.email "release-it@users.noreply.github.com"

      - name: Generate .npmrc
        run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > .npmrc

      - name: Install Dependencies
        run: npm ci --ignore-scripts --no-audit

      - name: Release
        run: npm run release:beta
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
