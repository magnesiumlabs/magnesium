// ============================================================================================= //
//                                             TEST                                              //
// ============================================================================================= //

@use "true" as *;
@use "../index" as theme with (
    $colors: (
        primary: #2674a2
    )
);

// ------------------------------------------------------------------------- //
// Mixins
// ------------------------------------------------------------------------- //

@include describe("theme.property()") {
    @include it("Should return `primary` theme custom property declaration.") {
        @include assert {
            @include output {
                .foo {
                    @include theme.property(primary);
                }
            }

            @include expect {
                .foo {
                    --mg-theme-primary: #2674a2;
                }
            }
        }
    }

    @include it("Should return new `primary` theme custom property declaration.") {
        @include assert {
            @include output {
                .foo {
                    @include theme.property(primary, darkcyan);
                }
            }

            @include expect {
                .foo {
                    --mg-theme-primary: darkcyan;
                }
            }
        }
    }

    @include it("Should return `color` declaration with `primary` custom property.") {
        @include assert {
            @include output {
                .foo {
                    @include theme.property(color, primary);
                }
            }

            @include expect {
                .foo {
                    color: var(--mg-theme-primary, #2674a2);
                }
            }
        }
    }
}

@include describe("theme.disabled-touch-screen()") {
    @include it("Should return disabled touch screen `@media` declaration.") {
        @include assert {
            @include output {
                .foo {
                    @include theme.disabled-touch-screen {
                        background: darkcyan;
                    };
                }
            }

            @include expect {
                .foo {
                    @media (pointer: fine) {
                        background: darkcyan;
                    }
                }
            }
        }
    }
}

@include describe("theme.disabled-pointer-events()") {
    @include it("Should return disabled pointer events declarations.") {
        @include assert {
            @include output {
                .foo {
                    @include theme.disabled-pointer-events;
                }
            }

            @include expect {
                .foo {
                    cursor: default;
                    pointer-events: none;
                }
            }
        }
    }
}

// ------------------------------------------------------------------------- //
// Functions
// ------------------------------------------------------------------------- //

@include describe("theme.color()") {
    @include it("Should return `color` declaration with `primary` theme color and without `var()`.") {
        @include assert {
            @include output {
                .foo {
                    color: theme.color(primary);
                }
            }

            @include expect {
                .foo {
                    color: #2674a2;
                }
            }
        }
    }
}
