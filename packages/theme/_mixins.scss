// ============================================================================================= //
//                                            MIXINS                                             //
// ============================================================================================= //

@use "sass:map";
@use "./variables";
@use "@sass-collective/property/custom-properties" with (
    $prefix: variables.$prefix
);
@use "@sass-collective/css";
@use "@sass-collective/property";
@use "./functions";

///
/// Core styles.
///
@mixin core-styles {
    @each $style in functions.get-keys() {
        @include selector(theme--#{$style}) {
            @include property(color, $style);
        }
    }

    @each $style in variables.$colors-bg {
        @include selector(theme--#{$style}-bg) {
            @include property(background-color, $style);
        }
    }
}

// ------------------------------------------------------------------------- //
// Private mixins
// ------------------------------------------------------------------------- //

// ...

// ------------------------------------------------------------------------- //
// Public mixins
// ------------------------------------------------------------------------- //

///
/// Set theme selector name.
///
@mixin selector($name) {
    .#{$name} {
        @if variables.$prefix != "" {
            @include css.selector(variables.$prefix, "-") {
                @content;
            }
        } @else {
            @content;
        }
    }
}

///
/// Set theme property.
///
@mixin property($property, $value: null, $important: false) {
    @if functions.is-color($property) {
        $property: custom-properties.create(theme-#{$property}, functions.color($property));
    } @else if functions.is-color($value) {
        $value: functions.set-var(theme-#{$value}, functions.color($value));
    }

    @include property.declaration($property, $value, $important);
}
