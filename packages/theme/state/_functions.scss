// ============================================================================================= //
//                                           FUNCTIONS                                           //
// ============================================================================================= //

@use "sass:map";
@use "sass:meta";

// ------------------------------------------------------------------------- //
// Private mixins
// ------------------------------------------------------------------------- //

@function _get-state($default-or-map, $state) {
    @if _is-state-map($default-or-map) {
        @return map.get($default-or-map, $state);
    } @else {
        @return null;
    }
}

@function _is-state-map($default-or-map) {
    @return meta.type-of($default-or-map) == "map";
}

// ------------------------------------------------------------------------- //
// Public mixins
// ------------------------------------------------------------------------- //

@function get-default-state($default-or-map) {
    $state: _get-state($default-or-map, default);

    @if $state == null and not _is-state-map($default-or-map) {
        @return $default-or-map;
    }

    @return $state;
}

@function get-hover-state($default-or-map) {
    @return _get-state($default-or-map, hover);
}

@function get-focus-state($default-or-map) {
    @return _get-state($default-or-map, focus);
}

@function get-selected-state($default-or-map) {
    @return _get-state($default-or-map, selected);
}

@function get-invalid-state($default-or-map) {
    @return _get-state($default-or-map, invalid);
}

@function get-readonly-state($default-or-map) {
    @return _get-state($default-or-map, readonly);
}

@function get-disabled-state($default-or-map) {
    @return _get-state($default-or-map, disabled);
}
