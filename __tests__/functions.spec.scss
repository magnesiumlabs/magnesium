// ============================================================================================= //
//                                             TEST                                              //
// ============================================================================================= //

@use "true" as *;
@use "../index" as magnesium with (
    $colors: (
        primary: darkcyan,
        secondary: darkorange
    ),
    $styles: (
        body: (
            line-height: 20px,
            font-size: 16px,
            font-weight: 400,
            letter-spacing: normal
        ),
        button: (
            line-height: 22px,
            font-size: 20px,
            font-weight: 700,
            letter-spacing: 2px
        )
    )
);
@use "../typography";

@include describe("core") {
    @include describe("functions") {
        @include describe("create-name()") {
            @include it("Should return name with prefix.") {
                @include assert-equal(magnesium.create-name(button), "mg-button");
            }
        }
    }
}

@include describe("theme") {
    @include describe("functions") {
        @include describe("create-theme-var()") {
            @include it("Should return tokens map with custom variables.") {
                @include assert-equal(magnesium.create-theme-var((
                    fill-color: primary,
                    label-size: 16px,
                    label-color: darkgreen
                ), button), (
                    fill-color: var(--mg-button-fill-color, var(--mg-theme-primary, darkcyan)),
                    label-size: var(--mg-button-label-size, 16px),
                    label-color: var(--mg-button-label-color, darkgreen)
                ));
            }

            @include it("Should return tokens map with custom variables without fallback (list).") {
                @include assert-equal(magnesium.create-theme-var((
                    label-color
                ), button), (
                    label-color: var(--mg-button-label-color)
                ));
            }

            @include it("Should return tokens map with custom variables without fallback (map).") {
                @include assert-equal(magnesium.create-theme-var((
                    label-color: null
                ), button), (
                    label-color: var(--mg-button-label-color)
                ));
            }
        }

        @include describe("get-theme-tokens()") {
            @include it("Should return color value from token.") {
                @include assert-equal(magnesium.get-theme-tokens(), (
                    primary,
                    secondary
                ));
            }
        }

        @include describe("get-theme-color()") {
            @include it("Should return color value from token.") {
                @include assert-equal(magnesium.get-theme-color(primary), darkcyan);
            }
        }
    }
}

@include describe("typography") {
    @include describe("functions") {
        @include describe("create-typography-vars()") {
            @include it("Should return tokens map with custom variables.") {
                @include assert-equal(typography.create-typography-vars("button", "button-label"), (
                    line-height: var(--mg-button-label-line-height, var(--mg-typography-button-line-height, 22px)),
                    font-size: var(--mg-button-label-font-size, var(--mg-typography-button-font-size, 20px)),
                    font-weight: var(--mg-button-label-font-weight, var(--mg-typography-button-font-weight, 700)),
                    letter-spacing: var(--mg-button-label-letter-spacing, var(--mg-typography-button-letter-spacing, 2px))
                ));
            }
        }

        @include describe("get-style-tokens()") {
            @include it("Should return color value from token.") {
                @include assert-equal(typography.get-style-tokens(), (
                    body,
                    button
                ));
            }
        }
    }
}
